.header

.h1 Using Djedefre

.h2 Installing

From
.link https://github.com/ljmdullaart/djedefre
download at least 

- 
.fixed djedefre.pl
- the directory
.fixed scan_scripts
- the directory
.fixed images

Make sure that the following Perl modules are installed:

- 
.fixed Tk
-
.fixed Tk::JBrowseEntry
- 
.fixed File::Slurp
- 
.fixed File::Slurper
- 
.fixed File::HomeDir
- 
.fixed DBD/SQLite.pm
-
.fixed List/MoerUtils.pm
-
.fixed Sort/Naturally.pm



Make sure that the following programs are installed:

- 
.fixed ipcalc
- 
.fixed grepcidr
- 
.fixed fping


.h2 First start

After installing or unpacking,

- Move to the directory where 
.fixed Djedefre
is installed.
- Make sure that there is a directory
.fixed database
and create it if it is not there
- Create the database with 
.fixed perl djedefre_create_db.pl
- start the GUI with
.fixed ./dedefre.pl &

You will be greeted with a cartouche depicting the hieroglyphs for Djedefre with a number of menus above it.

.img djedefre_opening.xcf

The buttons give access to functionality:

- Pages contains a list of pages with network drawings
- Lists provides listings of the network
- Input provides various methods for data entry

At this point, when you select the page "top" from the Pages menu, you will get an empty drawing.

.h2 Start scanning

To get some information into the database, scan-scripts are used. These scan-scripts can be 
found in the directory 
.fixed scan_scripts.

The best start would be to scan the local system. Launch the script
.fixed scan_local_system.sh
in the
.fixed scan_scripts
directory in a separate
.fixed xterm
window with:

.pre
bash scan-scripts/scan_local_system.sh database/djedefre.pl 
.pre

When the scan is finished, the plot page "top" will show the local system and the subnets that it 
is connected to.

.img djedefre_localsys.xcf

With the left mouse button, you can pick-up the server and the subnets and place them anywhere
on the canvas that you like. When a server or subnet is selected, an info-window opens on the right
displaying some information about the selected item.

.img djedefre_localsys2.xcf

As there are now subnets in the database, a scan of the subnets is possible. 
Run the script
.fixed  scan_subnet.sh with:

.pre
bash scan-scripts/scan_subnet.sh database/djedefre.pl 
.pre


.img djedefre_subnet.xcf



.img djedefre_srvdet.xcf

When you have scanned the network, placed all devices and subnets, set the correct type and name, your
network may look something like this:

.img djedefre_network.xcf

.h2 Scanning the network


You may have noticed that the scan of subnets did not provide a complete list of all the
servers on the network. This is because the subnet scan uses
.fixed fping
to scan the subnet. Typically, for example, Windows 10 does not reply to a ping, so 
no Windows 10 machines will show up. An ARP scan however will detect those machines if they're on
the same layer 2 segment.

There are a number of scan scripts available. 
These scripts try to find out what the network lay-out is, what the systems are.
Although the scripts can run in any sequence, the fastest discovery seems to be:

- local_system 
- subnet 
- arp 
- access 
- type 
- server 
- remote_system 
- cisco 
- dns 
- vbox  
- internet 
- database_integrity
- status 

The scan scripts are in the directory
.fixed scan_scripts
and they are called
.fixed scan_xxxxx.sh
with 
.fixed xxxxx
meaning the name of the scan.

.h3 local_system 

Adds the local system to the network. Also adds the interfaces and the subnets that the system is connected
to. 

.h3 subnet 

Scans all the known subnets for servers. Uses
.fixed sudo fping
for the scan.

.h3 access 

Scan all the known systems for ssh access. It must be password-less login. Three users are used:

- current user: should be the default
- 
.fixed root
: should be available only is a very closed environment, because it is unsafe. Some IoT things require this.
- 
.fixed admin
: same remark as
.fixed root
But some devices need this, for example older Qnap NASses.

.h3 arp 

The ARP table is read from every device that has ssh access. Interfaces that have an IP address and where the MAC-id
is not 00:00:00:00:00:00 are added. For interfaces without host, a server is created.

.h3 type 

Tries to determine the type of servers. This works reasonably well for servers that have ssh access.

.h3 server 

For the servers that have ssh access, try to appropriate all the interfaces. 

Also, if the host name is still the IP address, rename the server to its host name.

.h3 remote_system 

For all the servers that have ssh access, add the networks that they are connected to.

.h3 cisco 

Cisco IOS devices do not have a standard shell. The Cisco scan scans devices that have the type "cisco" and
does a "server" scan and a "remote_system" scan on these devices.

.h3 dns 

For all interfaces, set the host name to the host name that DNS has given it. Also, for all servers where the name 
is an IP address, set the host name to the corresponding name in DNS.

.h3 vbox  

Determine for all VirtualBox managers which machines are running on it.

.h3 status 

Determines the status of the servers. In its simple form, it tests whether the server responds to a ping.

If under
.fixed scan_scripts
there is a script
.fixednospace status_
.inospace name
.fixednospace .sh
, where
.i name
is the name of the server, then that script is used to determine the status of the server.
If the script has an exit code 0, then the server is up.

.h3 internet 

Uses
.fixed traceroute
to determine where the break-out to the Internet is. The last IP address 
that is in the database table "interfaces" is considered as belonging to the 
server that has the interface to the Internet.

